package App.Model;
// Generated 2016-03-30 18:52:05 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Beads generated by hbm2java
 */
@Entity
@Table(name = "Beads", schema = "dbo", catalog = "koraliki")
public class Beads implements java.io.Serializable {

	private int idBead;
	private Color color;
	private Category category;
	private String size;
	private String imageUrl;
	private Set<FinishBeads> finishBeads = new HashSet<FinishBeads>(0);

	public Beads() {
	}

	public Beads(int idBead, Color color, Category category) {
		this.idBead = idBead;
		this.color = color;
		this.category = category;
	}

	public Beads(int idBead, Color color, Category category, String size, String imageUrl, Set<FinishBeads> finishBeads) {
		this.idBead = idBead;
		this.color = color;
		this.category = category;
		this.size = size;
		this.imageUrl = imageUrl;
		this.finishBeads = finishBeads;
	}

	@Id

	@Column(name = "id_bead", unique = true, nullable = false)
	public int getIdBead() {
		return this.idBead;
	}

	public void setIdBead(int idBead) {
		this.idBead = idBead;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_color", nullable = false)
	public Color getColor() {
		return this.color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_category", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "size", length = 50)
	public String getSize() {
		return this.size;
	}

	public void setSize(String size) {
		this.size = size;
	}

	@Column(name = "image_url", length = 500)
	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "beads")
	public Set<FinishBeads> getFinishBeads() {
		return this.finishBeads;
	}

	public void setFinishBeads(Set<FinishBeads> finishBeads) {
		this.finishBeads = finishBeads;
	}

	@Transient
	public String getColorName(){
		return color.getColorName();
	}

	public void setColorName(String colorName){
		this.color.setColorName(colorName);
	}
	
	@Transient
	public String getCategoryName(){
		return category.getCategoryName();
	}
	
	public void setCategoryName(String categoryName){
		this.category.setCategoryName(categoryName);
	}
	
	@Transient
	public String getColorFamily(){
		return color.getColorFamily();
	}
	
	public void setColorFamily(String colorFamily){
		this.color.setColorFamily(colorFamily);
	}
	
	@Transient 
	public String getSubcategoryName(){
		return category.getParentCategory().getCategoryName();
	}
	
	public void setSubcategoryName(String subcategoryName){
		this.category.setParentCategory(new Category(subcategoryName));
	}
	
	@Transient 
	public String getMainCategoryName(){
		return category.getParentCategory().getParentCategory().getCategoryName();
	}
	
	public void setMainCategoryName(String mainCategoryName){
		this.category.getParentCategory().setCategoryName(mainCategoryName);
	}
	
	@Transient
	public String getFinishesNames(){

		String finishes = "";
		
		for(FinishBeads finish: finishBeads){
			
			if(finishes.length() < 1){
				finishes += finish.getFinish().getFinishName();
			}
			else{
				finishes += ", " + finish.getFinish().getFinishName();
			}
		}
		
		return finishes;
	}
	
	public void setFinishesNames(String finishes){
		
	}
}
